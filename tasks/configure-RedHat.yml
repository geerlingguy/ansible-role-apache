---
- name: Change vhosts path on RHEL 8 hosts
  set_fact:
    _apache_vhosts_path: "{{ apache_server_root + '/vhosts.d' if ansible_pkg_mgr == 'dnf' else apache_conf_path }}"

- name: Install SELinux Python dependencies.
  package:
    name: >-
      {{ ( (ansible_facts.distribution_major_version | int) < 8) | ternary('libselinux-python','python3-libselinux') }}
    state: present

- name: Remove default vhost configurations
  file:
    path: "{{ apache_conf_path }}/{{ item }}"
    state: absent
  notify: restart apache
  with_items: "{{ apache_default_vhost_filenames }}"
  when: apache_remove_default_vhost | bool

- name: Remove default ssl vhost configurations
  replace:
    dest: "{{ apache_conf_path }}/ssl.conf"
    regexp: "[#|\\s]*SSL Virtual Host Context(.*\\n)*</VirtualHost>"
  when: apache_remove_default_vhost_ssl | bool
  notify: restart apache

- name: Check if localhost cert exists (RHEL 8 and later).
  stat:
    path: /etc/pki/tls/certs/localhost.crt
  register: localhost_cert
  when: ansible_distribution_major_version | int >= 8

- name: Ensure httpd certs are installed (RHEL 8 and later).
  command: /usr/libexec/httpd-ssl-gencerts
  when:
    - ansible_distribution_major_version | int >= 8
    - not localhost_cert.stat.exists

- name: Enable Apache mods.
  apache2_module:
    name: "{{ item | regex_replace('(\\w+)\\.load','\\1') }}"
    state: present
  with_items: "{{ apache_mods_enabled }}"
  notify: restart apache

- name: Disable Apache mods.
  apache2_module:
    name: "{{ item | regex_replace('(\\w+)\\.load','\\1') }}"
    state: absent
  with_items: "{{ apache_mods_disabled }}"
  notify: restart apache

- name: Configure Apache httpd.conf (lineinfile - legacy).
  lineinfile:
    dest: "{{ apache_server_root }}/conf/{{ apache_daemon }}.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items: "{{ apache_ports_configuration_items }}"
  when: item.line is defined
  notify: restart apache

- name: Configure Apache ssl.conf (replace).
  replace:
    dest: "{{ apache_conf_path }}/ssl.conf"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items: "{{ apache_ports_configuration_items }}"
  when:
    - item.replace is defined
    - '"ssl.load" in apache_mods_enabled or "ssl" in apache_mods_enabled'
  notify: restart apache

- name: Check whether certificates defined in vhosts exist.
  stat: path={{ item.certificate_file }}
  register: apache_ssl_certificates
  with_items: "{{ apache_vhosts_ssl }}"

- name: Add apache vhosts configuration.
  template:
    src: "{{ apache_vhosts_template }}"
    dest: "{{ _apache_vhosts_path }}/{{ apache_vhosts_filename }}"
    owner: root
    group: root
    mode: 0644
  notify: restart apache
  when: apache_create_vhosts | bool

- name: Remove apache vhosts configuration.
  file:
    path: "{{ _apache_vhosts_path }}/{{ apache_vhosts_filename }}"
    state: absent
  notify: restart apache
  when: not apache_create_vhosts
